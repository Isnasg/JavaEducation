package lr5.task5;

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner id = new Scanner(System.in);

        boolean kon = false;
        while (!kon) {
            System.out.println("Задать аргумент методу? y/n");
            String vibor = id.nextLine();
            switch (vibor) {
                case ("y"): {
                    System.out.print("Введите число: ");
                    int x = id.nextInt();
                    Task5 task1 = new Task5(x);
                    kon = true;
                    break;
                }
                case ("n"): {
                    Task5 task = new Task5();
                    kon = true;
                    break;
                }
                default: {
                    System.out.println("Некорректное значение ");
                }
            }
        }
    }
}

//5. Напишите программу с классом, у которого есть закрытое целочисленное
//        поле. Значение полю присваивается с помощью открытого метода. Методу
//аргументом может передаваться целое число, а также метод может вызываться
//        без аргументов. Если методы вызывается без аргументов, то поле получает
//        нулевое значение. Если метод вызывается с целочисленным аргументом, то
//        это значение присваивается полю. Однако если переданное аргументом
//        методу значение превышает 100, то значением полю присваивается число 100.
//        Предусмотрите в классе конструктор, который работает по тому же принципу
//        что и метод для присваивания значения полю. Также в классе должен быть
//        метод, позволяющий проверить значение поля.
